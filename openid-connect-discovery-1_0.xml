<?xml version="1.0" encoding="US-ASCII"?>
<?xml-stylesheet type='text/xsl' href='http://xml.resource.org/authoring/rfc2629.xslt' ?>
<!DOCTYPE rfc PUBLIC "-//IETF//DTD RFC 2629//EN"
"http://xml.resource.org/authoring/rfc2629.dtd">
<rfc category="exp" docName="openid-connect-discovery-1_0" ipr="trust200902">
  <?rfc toc="yes" ?>

  <?rfc tocdepth="3" ?>

  <?rfc symrefs="yes" ?>

  <?rfc sortrefs="yes"?>

  <?rfc strict="no" ?>

  <?rfc iprnotified="no" ?>

  <?rfc private="Draft" ?>

  <front>
    <title>OpenID Connect Discovery 1.0 - draft 06</title>

    <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
      <organization abbrev="NRI">Nomura Research Institute,
      Ltd.</organization>

      <address>
        <email>n-sakimura@nri.co.jp</email>
      </address>
    </author>

    <author fullname="John Bradley" initials="J." role="editor"
            surname="Bradley">
      <organization abbrev="Independent">Independent</organization>

      <address>
        <email>ve7jtb@ve7jtb.com</email>
      </address>
    </author>

    <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
      <organization abbrev="Microsoft">Microsoft Corporation</organization>

      <address>
        <email>mbj@microsoft.com</email>
      </address>
    </author>

    <author fullname="Edmund Jay" initials="E." surname="Jay">
      <organization abbrev="MGI1">MGI1</organization>

      <address>
        <email>ejay@mgi1.com</email>
      </address>
    </author>

    <date day="29" month="September" year="2011" />

    <abstract>
      <t>OpenID Connect is an identity protocol that provides authentication,
      authorization, and attribute transmission capability. It allows third
      party attested claims from distributed sources. The specification suite
      builds on OAuth 2.0 and consists of Building Blocks (Messages,
      Discovery, Dynamic Client Registration, Session Management, JSON Web
      Token, JSON Web Signature, JSON WEB Encryption, JSON Web Keys, Simple
      Web Discovery), Protocol Bindings (e.g., Standard and Basic Client) and
      Extensions. This specification is the "Discovery" part of the suite that
      defines how user and server endpoints are discovered.</t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119">RFC 2119</xref>.</t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t>In order for an OpenID client to utilize OpenID Connect services for
      a user, the client needs to know where the OpenID Provider is. OpenID
      Connect uses <xref target="SWD">Simple Web Discovery</xref> to locate
      the OpenID Provider for an end-user.</t>

      <t>Once an OpenID Provider is identified, the endpoint and other
      configuration information for that OP is retrieved from a well-known
      location as a JSON document.</t>
    </section>

    <section anchor="terminology" title="Terminology">
      <t>In addition to the terms "Access Token", "Refresh Token",
      "Authorization Code", "Authorization Grant", "Authorization Server",
      "Authorization Endpoint", "Client", "Client Identifier", "Client
      Secret", "Protected Resource", "Resource Owner", "Resource Server", and
      "Token Endpoint" that are defined by <xref target="OAuth2.0">OAuth
      2.0</xref>, and the terminology defined in the <xref
      target="OpenID.Messages">OpenID Connect Messages 1.0</xref>
      specification, the following terms are defined:<list style="hanging">
          <t hangText="Principal">A resource that is the target of a request
          in Simple Web Discovery.</t>

          <t hangText="Issuer">A verifiable identifier for the OpenID
          Provider. An <spanx style="verb">issuer</spanx> is a HTTPS URL with
          no path component.</t>

          <t hangText="Identifier">An Identifier is either an <spanx
          style="verb">http</spanx> or <spanx style="verb">https</spanx> URI
          (commonly referred to as a <spanx style="verb">URL</spanx> within
          this document), or an account URI. This document defines various
          kinds of Identifiers, designed for use in different contexts.</t>
        </list></t>
    </section>

    <section anchor="ProviderDisc" title="Provider Discovery">
      <t>OpenID Provider discovery is optional; if a Relying Party knows the
      OP information through an out-of-band mechanism, they can skip this step
      and proceed to <xref target="ProviderConfig"></xref>.</t>

      <t>Provider discovery requires the following information to make a
      discovery request:</t>

      <t><list style="hanging">
          <t hangText="Principal">Identifier of the target end-user who is the
          subject of the discovery request</t>

          <t hangText="Host">Server where a Simple Web Discovery service is
          hosted</t>

          <t hangText="Service">URI identifying the type of service whose
          location is requested</t>
        </list></t>

      <t>OpenID Connect uses the following discoverable service in Simple Web
      Discovery (SWD):</t>

      <texttable align="center" style="all">
        <ttcol width="">Service Type</ttcol>

        <ttcol>URI</ttcol>

        <c>OpenID Connect Issuer</c>

        <c>http://openid.net/specs/connect/1.0/issuer</c>
      </texttable>

      <t>To start discovery of OpenID end points, the end-user supplies an
      identifier to the client or relying party. The client performs
      normalization rules to the identifier to extract the principal and host.
      Then it makes a HTTPS request to the host's Simple Web Discovery
      endpoint with the <spanx style="verb">principal</spanx> and <spanx
      style="verb">service</spanx> parameters to obtain the location of the
      requested service.</t>

      <t>What MUST be returned in the response is the <spanx style="verb">issuer</spanx>.
      This includes URI scheme, HOST, and OPTIONALLY, port.</t>

      <section title="Identifier Normalization">
        <t>The purpose of normalization is to extract a normalized principal
        and host from the user input. This is then used as input to SWD to
        discover the <spanx style="verb">issuer</spanx>.</t>

        <t>The user identifier can be one of the following:</t>

        <t><list style="symbols">
            <t>xri</t>

            <t>E-mail address</t>

            <t>URL</t>
          </list></t>

        <t>The identifyer normalization rules are not extensable.</t>

        <t>URLs without a host segment are not supported by this discovery
        specification.</t>

        <section title="Identifyer Type">
          <t><list style="numbers">
              <t>Identifiers starting with the <xref
              target="XRI_Syntax_2.0">XRI</xref> characters ('=','@', and '!')
              are reserved. Processing of these is out of scope for this
              document.</t>

              <t>Any identifier that contains the character '@' in any other
              position other than the first position must be treated as an
              e-mail address.</t>

              <t>All other identifiers are treated as a URL.</t>
            </list></t>
        </section>

        <section title="E-mail Address">
          <t>If the identifier is an e-mail address, the principal is the
          e-mail address and the host is the portion to the right of the '@'
          character.</t>
        </section>

        <section title="URL">
          <t>A URL identifier is normalized according to the following
          rules:</t>

          <t><list style="symbols">
              <t>If the URL does not have a Scheme part, the string "https://"
              is prefixed to the URL as the <xref
              target="RFC3986">Scheme</xref>.</t>

              <t>If the URL contains a fragment part, it MUST be stripped off
              together with the fragment delimiter character "#".</t>

              <t>The resulting URL is used as the principal and the host is
              extracted from it according to <xref target="RFC3986">URI</xref>
              syntax rules.</t>
            </list></t>
        </section>
      </section>

      <section title="Non-Normative Examples">
        <section title="E-Mail Address">
          <t>To find the <spanx style="verb">issuer</spanx> for the given
          e-mail address, <spanx style="verb">joe@example.com</spanx>, the SWD
          parameters are as follows:</t>

          <texttable>
            <ttcol>SWD Parameter</ttcol>

            <ttcol>Value</ttcol>

            <c>principal</c>

            <c>joe@example.com</c>

            <c>host</c>

            <c>example.com</c>

            <c>service</c>

            <c>http://openid.net/specs/connect/1.0/issuer</c>
          </texttable>

          <t>Following the SWD specification, the client would make the
          following request to get the discovery information:</t>

          <t><figure>
              <artwork><![CDATA[GET /.well-known/simple-web-discovery?principal=joe%40example%2Ecom&service=http%3A%2F%2Fopenid%2Enet%2Fspecs%2Fconnect%2F1%2E0%2Fissuer HTTP/1.1
Host: example.com

HTTP/1.1 200 O.K.
Content-Type: application/json

{
 "locations":["https://example.com/auth"]
}]]></artwork>
            </figure></t>
        </section>

        <section title="URL">
          <t>To find the <spanx style="verb">issuer</spanx> for the given URL,
          <spanx style="verb">https://example.com/joe</spanx>, the SWD
          parameters are as follows:</t>

          <texttable>
            <ttcol>SWD Parameter</ttcol>

            <ttcol>Value</ttcol>

            <c>principal</c>

            <c>https://example.com/joe</c>

            <c>host</c>

            <c>example.com</c>

            <c>service</c>

            <c>http://openid.net/specs/connect/1.0/issuer</c>
          </texttable>

          <t>Following the SWD specification, the client would make the
          following request to get the discovery information:</t>

          <t><figure>
              <artwork><![CDATA[GET /.well-known/simple-web-discovery?principal=https%3A%2F%2Fexample%2Ecom%2Fjoe&service=http%3A%2F%2Fopenid%2Enet%2Fspecs%2Fconnect%2F1%2E0%2Fissuer HTTP/1.1
Host: example.com

HTTP/1.1 200 O.K.
Content-Type: application/json

{
 "locations":["https://example.com"]
}]]></artwork>
            </figure></t>
        </section>

        <section title="Account URI">
          <t>To find the <spanx style="verb">issuer</spanx> for the given URI,
          <spanx style="verb">acct://joe@example.com</spanx>, the SWD
          parameters are as follows:</t>

          <texttable>
            <ttcol>SWD Parameter</ttcol>

            <ttcol>Value</ttcol>

            <c>principal</c>

            <c>acct://joe@example.com/</c>

            <c>host</c>

            <c>example.com</c>

            <c>service</c>

            <c>http://openid.net/specs/connect/1.0/issuer</c>
          </texttable>

          <t>Following the SWD specification, the client would make the
          following request to get the discovery information:</t>

          <t><figure>
              <artwork><![CDATA[GET /.well-known/simple-web-discovery?principal=acct%3A%2F%2Fjoe%40example%2Ecom%2F&service=http%3A%2F%2Fopenid%2Enet%2Fspecs%2Fconnect%2F1%2E0%2Fissuer HTTP/1.1
Host: example.com

HTTP/1.1 200 O.K.
Content-Type: application/json

{
 "locations":["https://example.com"]
}]]></artwork>
            </figure></t>
        </section>

        <section title="Hostname &amp; Port">
          <t>To find the <spanx style="verb">issuer</spanx> for the given
          hostname, <spanx style="verb">example.com:8080</spanx>, the SWD
          parameters are as follows:</t>

          <texttable>
            <ttcol>SWD Parameter</ttcol>

            <ttcol>Value</ttcol>

            <c>principal</c>

            <c>https://example.com:8080/</c>

            <c>host</c>

            <c>example.com:8080</c>

            <c>service</c>

            <c>http://openid.net/specs/connect/1.0/issuer</c>
          </texttable>

          <t>Following the SWD specification, the client would make the
          following request to get the discovery information:</t>

          <t><figure>
              <artwork><![CDATA[GET /.well-known/simple-web-discovery?principal=https%3A%2F%2Fexample%2Ecom%3A8080%2F&service=http%3A%2F%2Fopenid%2Enet%2Fspecs%2Fconnect%2F1%2E0%2Fissuer HTTP/1.1
Host: example.com:8080

HTTP/1.1 200 O.K.
Content-Type: application/json

{
 "locations":["https://example.com"]
}]]></artwork>
            </figure></t>
        </section>
      </section>

      <section title="Redirection">
        <t>In cases where the SWD request is handled at a host or location
        other than the one derived from the end-user's identifier, the host
        will return a JSON object containing the new location.</t>

        <t>To enable service level redirection a SWD server MAY return a 200
        O.k. to an HTTPS request with a content type of application/json (or
        whatever other content type has been negotiated) that contains a JSON
        object that contains a member pair whose name is the string
        "SWD_service_redirect" whose value is a JSON object with a member pair
        whose name is "location" and whose value is a string that encodes a
        URI. Optionally the JSON object value of "SWD_service_redirect" MAY
        also contain a member whose name is "expires" and whose value is a
        JSON number that encodes an intiger.</t>

        <t>The "location" member identifies the URI that the caller MUST
        redirect all SWD requests for that domain to until the "expires" time
        is met. SWD requests for the redirected domain MUST be constructed by
        taking the URI returned in the "location" and using it as the base URI
        to which the SWD form arguments are then added as query parameters.
        The location URI MUST NOT include a query component.</t>

        <t><figure>
            <artwork><![CDATA[GET /.well-known/simple-web-discovery?principal=joe%40example%2Ecom&service=http%3A%2F%2Fopenid%2Enet%2Fspecs%2Fconnect%2F1%2E0%2Fissuer HTTP/1.1
Host: example.com

HTTP/1.1 200 O.K.
Content-Type: application/json

{
 "SWD_service_redirect":
  {
   "location":"https://example.net/swd_server"
  }
}

GET /swd_server?principal=joe%40example%2Ecom&service=http%3A%2F%2Fopenid%2Enet%2Fspecs%2Fconnect%2F1%2E0%2Fissuer HTTP/1.1
Host: example.net

HTTP/1.1 200 O.K.
Content-Type: application/json

{
 "locations":["https://example.net/auth"]
}]]></artwork>
          </figure></t>
      </section>

      <section title="Error">
        <t>If the Simple Web Discovery endpoint is unreachable or returns a
        error, then the RP may prepend https: to the host from <xref
        target="ProviderDisc">Sec 3.1</xref> and use that as the <spanx
        style="verb">issuer</spanx>.</t>
      </section>
    </section>

    <section anchor="ProviderConfig"
             title="Provider Configuration Information">
      <t>This step is optional. The OpenID Provider endpoints and
      configuration information may be obtained out-of-band.</t>

      <t>Using the <spanx style="verb">issuer</spanx> discovered in <xref
      target="ProviderDisc"></xref> or through direct configuration the OpenID
      Provider's configuration can be retrieved.</t>

      <t>OpenID Providers MUST make available a JSON document at the path
      .well-known/openid-configuration. The syntax and semantics of <spanx
      style="verb">.well-known</spanx> are defined in <xref
      target="RFC5785">RFC 5785</xref>. <spanx style="verb">openid-configuration</spanx>
      MUST point to a JSON document compliant with this specification.</t>

      <t>OpenID Providers MUST support receiving SWD requests via TLS 1.2 as
      defined in <xref target="RFC5246">RFC 5246</xref> and MAY support other
      transport layer security mechanisms of equivalent security.</t>

      <section title="Provider Configuration Request">
        <t>An OpenID Provider Configuration Document is queried using a HTTPS
        GET request with the previously specified path.</t>

        <t>The client would make the following request to the <spanx
        style="verb">issuer </spanx>using TLS to get the Configuration
        information</t>

        <t><figure>
            <artwork><![CDATA[GET /.well-known/openid-configuration HTTP/1.1
Host: example.com
]]></artwork>
          </figure></t>
      </section>

      <section title="Provider Configuration Response">
        <t>The response is a set of claims about the OpenID Provider's
        configuration, including all necessary endpoint, supported scope, and
        public key location information.</t>

        <t>The response MUST return a plain text JSON object that contains a
        set of claims that are a subset of those defined below.</t>

        <t>Claims that return multiple values are JSON arrays. Claims with 0
        elements must be omitted from the response.</t>

        <t>Other claims MAY also be returned.</t>

        <texttable anchor="ClaimTable" title="Reserved Claim Definitions">
          <ttcol align="left">Claim</ttcol>

          <ttcol align="left">Type</ttcol>

          <ttcol align="left">Description</ttcol>

          <c>version</c>

          <c>string</c>

          <c>Version of the provider response. "3.0" is the default.</c>

          <c>issuer</c>

          <c>string</c>

          <c>The https: URL with no path component the OP asserts as <spanx
          style="verb">it's issuer identifyer</spanx></c>

          <c>authorization_endpoint</c>

          <c>string</c>

          <c>URL of the OP's Authentication and Authorization Endpoint <xref
          target="OpenID.Messages"></xref></c>

          <c>token_endpoint</c>

          <c>string</c>

          <c>URL of the OP's OAuth 2.0 Token Endpoint <xref
          target="OpenID.Messages"></xref></c>

          <c>user_info_endpoint</c>

          <c>string</c>

          <c>URL of the OP's UserInfo Endpoint <xref
          target="OpenID.Messages"></xref></c>

          <c>check_id_endpoint</c>

          <c>string</c>

          <c>URL of the OP's Check ID Endpoint <xref
          target="OpenID.Session"></xref></c>

          <c>refresh_session_endpoint</c>

          <c>string</c>

          <c>URL of the OP's Refresh Session Endpoint <xref
          target="OpenID.Session"></xref></c>

          <c>end_session_endpoint</c>

          <c>string</c>

          <c>URL of the OP's End Session Endpoint <xref
          target="OpenID.Session"></xref></c>

          <c>jwk_document</c>

          <c>string</c>

          <c>URL of the OP's JSON Web Key <xref target="JWK"></xref>
          document</c>

          <c>x509_url</c>

          <c>string</c>

          <c>URL of the OP's X.509 certificates in PEM format.</c>

          <c>registration_endpoint</c>

          <c>string</c>

          <c>URL of the OP's Dynamic Client Registration Endpoint <xref
          target="OpenID.Registration"></xref></c>

          <c>scopes_supported</c>

          <c>array</c>

          <c>A JSON array containing a list of the <xref
          target="OAuth2.0">OAuth 2.0 </xref> scopes that this server
          supports. The server MUST support the <spanx style="verb">openid</spanx>
          scope.</c>

          <c>flows_supported</c>

          <c>array</c>

          <c>A JSON array containing a list of the OAuth 2.0 flows that this
          server supports. The server MUST support the code flow.</c>

          <c>iso29115_supported</c>

          <c>array</c>

          <c>A JSON array containing a list of the ISO 29115 assurance
          contexts that this server supports.</c>

          <c>identifiers_supported</c>

          <c>array</c>

          <c>A JSON array containing a list of the user identifier types that
          this server supports</c>
        </texttable>

        <t>Example response</t>

        <t><figure>
            <artwork><![CDATA[{
 "authorization_endpoint": "https://example.com/connect/authorize",
 "issuer" : "https://example.com",
 "token_endpoint": "https://example.com/connect/token"
 "user_info_endpoint": "https://example.com/connect/user",
 "check_session_endpoint": "https://example.com/connect/check_session",
 "refresh_session_endpoint": "https://example.com/connect/refresh_session",
 "end_session_endpoint": "https://example.com/connect/end_session",
 "jwk_document": "https://example.com/jwk.json",
 "registration_endpoint": "https://example.com/connect/register",
 "scopes_supported": ["openid"],
 "flows_supported": ["code", "token"],
 "iso29115_supported": ["http://www.idmanagement.gov/schema/2009/05/icam/openid-trust-level1.pdf"],
 "identifiers_supported": ["public", "ppid"]
}]]></artwork>
          </figure></t>
      </section>

      <section title="Provider Configuration Verification">
        <t>If the configuration response contains the <spanx style="verb">issuer</spanx>
        eliment, the value MUST exactly match the <spanx style="verb">issuer</spanx>
        URL that was used to retreave it.</t>
      </section>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This document makes no request of IANA.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>TBD</t>
    </section>

    <section title="Open Issues and Things To Be Done (TBD)">
      <t>[[ To be removed from the final specification ]]</t>

      <t>Following items remain to be done in this draft:</t>

      <t><list style="symbols">
          <t>Should <spanx style="verb">issuer</spanx> be in the Provider
          Configuration Response?</t>

          <t>Should <spanx style="verb">issuer</spanx> be explicitly
          restricted to the https:// scheme?</t>
        </list></t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5785.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?>

      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.3986.xml'?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml"?>

      <reference anchor="OpenID.Messages">
        <front>
          <title>OpenID Connect Messages 1.0</title>

          <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
            <organization abbrev="NRI">Nomura Research Institute,
            Ltd.</organization>
          </author>

          <author fullname="David Recordon" initials="D." surname="Recordon">
            <organization abbrev="Facebook">Facebook</organization>
          </author>

          <author fullname="John Bradley" initials="J." surname="Bradley">
            <organization abbrev="Protiviti">Protiviti Government
            Services</organization>
          </author>

          <author fullname="Breno de Medeiros" initials="B."
                  surname="de Medeiros">
            <organization abbrev="Google">Google</organization>
          </author>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft
            Corporation</organization>
          </author>

          <author fullname="Edmund Jay" initials="E." surname="Jay">
            <organization abbrev="MGI1">MGI1</organization>
          </author>

          <date day="2" month="September" year="2011" />
        </front>

        <format target="http://openid.net/specs/openid-connect-messages-1_0.html"
                type="HTML" />
      </reference>

      <reference anchor="OpenID.Session">
        <front>
          <title>OpenID Connect Session Management 1.0</title>

          <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
            <organization abbrev="NRI">Nomura Research Institute,
            Ltd.</organization>
          </author>

          <author fullname="John Bradley" initials="J." surname="Bradley">
            <organization abbrev="Protiviti">Protiviti Government
            Services</organization>
          </author>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft
            Corporation</organization>
          </author>

          <author fullname="Breno de Medeiros" initials="B."
                  surname="de Medeiros">
            <organization abbrev="Google">Google</organization>
          </author>

          <author fullname="Chuck Mortimore" initials="C." surname="Mortimore">
            <organization abbrev="Salesforce">Salesforce</organization>
          </author>

          <author fullname="Edmund Jay" initials="E." surname="Jay">
            <organization abbrev="MGI1">MGI1</organization>
          </author>

          <date day="2" month="September" year="2011" />
        </front>

        <format target="http://openid.net/specs/openid-connect-session-1_0.html"
                type="HTML" />
      </reference>

      <reference anchor="SWD">
        <front>
          <title>Simple Web Discovery</title>

          <author fullname="Michael B. Jones" initials="M.B." role="editor"
                  surname="Jones">
            <organization abbrev="Microsoft">Microsoft</organization>
          </author>

          <author fullname="Yaron Goland" initials="Y.Y." surname="Goland">
            <organization abbrev="Microsoft">Microsoft</organization>
          </author>

          <date day="11" month="July" year="2011" />
        </front>

        <format target="http://self-issued.info/docs/draft-jones-simple-web-discovery.html"
                type="HTML" />
      </reference>

      <reference anchor="JWK">
        <front>
          <title>JSON Web Key (JWK)</title>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft</organization>
          </author>

          <date day="25" month="July" year="2011" />
        </front>

        <format target="http://self-issued.info/docs/draft-jones-json-web-key.html"
                type="HTML" />
      </reference>

      <reference anchor="OpenID.Registration">
        <front>
          <title>OpenID Connect Dynamic Client Registration 1.0</title>

          <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
            <organization abbrev="NRI">Nomura Research Institute,
            Ltd.</organization>
          </author>

          <author fullname="John Bradley" initials="J." role="editor"
                  surname="Bradley">
            <organization abbrev="Protiviti">Protiviti Government
            Services</organization>
          </author>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft
            Corporation</organization>
          </author>

          <date day="2" month="September" year="2011" />
        </front>

        <format target="http://openid.net/specs/openid-connect-registration-1_0.html"
                type="HTML" />
      </reference>
    </references>

    <references title="Informative References">
      <reference anchor="OAuth2.0">
        <front>
          <title>OAuth 2.0 Authorization Protocol</title>

          <author fullname="Eran Hammer-Lahav" initials="E." role="editor"
                  surname="Hammer-Lahav">
            <organization abbrev="Yahoo">Yahoo</organization>
          </author>

          <author fullname="David Recordon" initials="D." surname="Recordon">
            <organization abbrev="Facebook">Facebook</organization>
          </author>

          <author fullname="Dick Hardt" initials="D." surname="Hardt">
            <organization abbrev="MSFT">Microsoft</organization>
          </author>

          <date day="25" month="July" year="2011" />
        </front>

        <format target="http://tools.ietf.org/html/draft-ietf-oauth-v2"
                type="HTML" />
      </reference>

      <reference anchor="XRI_Syntax_2.0">
        <front>
          <title>Extensible Resource Identifier (XRI) Syntax V2.0</title>

          <author fullname="Drummond Reed " initials="D." surname="Reed">
            <organization></organization>
          </author>

          <author fullname="Dave McAlpin" initials="D." surname="McAlpin">
            <organization></organization>
          </author>

          <date day="14" month="November" year="2005" />
        </front>

        <format target="http://www.oasis-open.org/committees/download.php/15376/xri-syntax-V2.0-cs.html"
                type="HTML" />

        <format target="http://www.oasis-open.org/committees/download.php/15377/xri-syntax-V2.0-cs.pdf"
                type="PDF" />
      </reference>
    </references>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t></t>
    </section>

    <section title="Document History">
      <t>[[ To be removed from the final specification ]]</t>

      <t>-06</t>

      <t><list style="symbols">
          <t>Change Check Session Endpoint to Check ID Endpoint to match
          Basic</t>

          <t>canged certs_url to x509_url to match registration and JWE
          format</t>
        </list></t>

      <t>-05<list style="symbols">
          <t>Ticket #46 Added text to 3.3</t>

          <t>Deleted duplicate check session endpoint from 4.2</t>

          <t>Ticket #40 Added clarification of issuer url to 4.2</t>

          <t>Ticket #39 Cleaned up issuer examples and added verification
          text.</t>
        </list></t>

      <t>-04 <list style="symbols">
          <t>Changes associated with renaming "Lite" to "Basic Client" and
          replacing "Core" and "Framework" with "Messages" and "Standard".</t>

          <t>Numerous cleanups, including updating references.</t>
        </list></t>

      <t>-03 <list style="symbols">
          <t>Corrected examples.</t>
        </list></t>

      <t>-02 <list style="symbols">
          <t>Correct issues raised by Johnny Bufu and discussed on the
          7-Jul-11 working group call.</t>
        </list></t>

      <t>-01 <list style="symbols">
          <t>Incorporate working group decisions from 5-Jul-11 spec call.</t>

          <t>Consistency and cleanup pass, including removing unused
          references.</t>
        </list></t>

      <t>-00 <list style="symbols">
          <t>Initial version based upon former openid-connect-swd-1_0
          spec.</t>
        </list></t>
    </section>
  </back>
</rfc>
