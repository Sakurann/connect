<?xml version="1.0" encoding="US-ASCII"?>
<?xml-stylesheet type='text/xsl' href='http://xml.resource.org/authoring/rfc2629.xslt' ?>
<!DOCTYPE rfc PUBLIC "-//IETF//DTD RFC 2629//EN"
"http://xml.resource.org/authoring/rfc2629.dtd">
<rfc category="std" docName="openid-connect-openid2-migration-1_0" ipr="oidf">
  <?rfc toc="yes" ?>

  <?rfc tocdepth="5" ?>

  <?rfc symrefs="yes" ?>

  <?rfc sortrefs="yes"?>

  <?rfc strict="yes" ?>

  <?rfc iprnotified="no" ?>

  <front>
    <title abbrev="Openid 2.0 to OpenID Connect Migration 1.0">OpenID 2.0 to
    OpenID Connect Migration 1.0 - draft 01</title>

    <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
      <organization abbrev="NRI">Nomura Research Institute,
      Ltd.</organization>

      <address>
        <email>n-sakimura@nri.co.jp</email>

        <uri>http://nat.sakimura.org/</uri>
      </address>
    </author>

    <author fullname="John Bradley" initials="J." surname="Bradley">
      <organization abbrev="Ping Identity">Ping Identity</organization>

      <address>
        <email>ve7jtb@ve7jtb.com</email>

        <uri>http://www.thread-safe.com/</uri>
      </address>
    </author>

    <author fullname="Naween Agarwal" initials="N." surname="Agarwal">
      <organization abbrev="Google">Google</organization>

      <address>
        <email>naa@google.com</email>

        <uri>http://www.google.com</uri>
      </address>
    </author>

    <author fullname="Edmund Jay" initials="E." surname="Jay">
      <organization abbrev="Illumila">Illumila</organization>

      <address>
        <email>ejay@illumi.la</email>

        <uri>http://illumi.la</uri>
      </address>
    </author>

    <date day="04" month="July" year="2014" />

    <workgroup>OpenID Connect Working Group</workgroup>

    <abstract>
      <t>This specification defines how an OpenID Authentication 2.0 relyin
      party can migrate the user from OpenID 2.0 identifier to OpenID Connect
      Identifier by using an ID Token that includes the OpenID 2.0 verified
      claimed ID. In this specification, the method to request such an
      additional claim and the method for the verification of the resulting ID
      Token is specified.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="Introduction" title="Introduction">
      <t>OpenID Authentication 2.0 is a popular authentication federation
      protocol through which the relying party can obtain the user&rsquo;s
      verified identifier from the OpenID Provider (OP) to which the user was
      authenticated. OpenID Connect is a newer version of it but the
      identifier format is different and thus relying parties need to migrate
      those user identifiers to continue accepting such users.</t>

      <t>In this specification, a standard method for this kind of migration
      on a per user basis is described.</t>

      <section anchor="rnc" title="Requirements Notation and Conventions">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119">RFC 2119</xref>.</t>

        <t>In the .txt version of this document, values are quoted to indicate
        that they are to be taken literally. When using these values in
        protocol messages, the quotes MUST NOT be used as part of the value.
        In the HTML version of this document, values to be taken literally are
        indicated by the use of <spanx style="verb">this fixed-width font</spanx>.</t>
      </section>

      <section anchor="Terminology" title="Terminology">
        <t>For the purpose of this specificaiton, the terms defined in<xref
        target="OpenID.Core"> OpenID Connect Core 1.0</xref> and <xref
        target="OpenID.2.0">OpenID Authentcation 2.0</xref> is used. Where a
        same term is defined in both sepcifications, the term defined in
        OpenID Connect Core takes precedence.</t>

        <t>This specification also defines the following terms: <list
            style="hanging">
            <t hangText="OpenID 2.0 Identifier"><vspace /> Verified user
            identifier of OpenID Authentication 2.0.</t>

            <t hangText="Connect OP"><vspace /> OpenID Connect OP</t>
          </list></t>
      </section>
    </section>

    <section anchor="RequestOpenid2Id"
             title="Requesting the OpenID 2.0 Identifier and Connect iss/sub pair together">
      <t>To obtain the OpenID 2.0 Identifier, the RP sends a modified OpenID
      Connect Authentication Request by adding <spanx style="verb">openid2</spanx>
      as an additional scope value.</t>

      <t>If PPID was used to obtain the OpenID 2.0 Identifier, openid.realm
      has to be sent to the OP with the request. For this purpose, a new
      authentication request parameter <spanx style="verb">openid2_realm</spanx>
      is defined.</t>

      <t><list style="hanging">
          <t hangText="openid2_realm"><vspace />OPTIONAL. The <spanx
          style="verb">openid.realm</spanx> value as defined in section 9.1 of
          <xref target="OpenID.2.0">OpenID 2.0</xref></t>
        </list>If the authority section of Authorization Endpoint URI is
      different from the authority section of the OpenID 2.0 OP&rsquo;s OP
      Endpoint URL, the ID Token returned from the authentication request MUST
      be signed using the OP&rsquo;s private key. The OP's corresponding
      public key MUST be published through the OpenID 2.0 Identifier URL with
      <spanx style="verb">application/jwk-set+json</spanx> mime-type in
      response to a GET request with an Accept header set to <spanx
      style="verb">application/jwk-set+json</spanx>.</t>

      <t><spanx style="strong">Note</spanx>: This is similar to YADIS. In case
      of YADIS, it is using Accept header with its value set to
      application/xml+xrds.</t>

      <figure>
        <preamble>The following is a non-normative example of an
        authentication request to request the OpenID 2.0 Identifier (with line
        wraps within values for display purposes only)</preamble>

        <artwork><![CDATA[This example assumes that the OpenID 2.0 OP Identifier 
is https://openid2.example.com

  GET /authorize?response_type=id_token
           &scope=openid%20openid2
           &client_id=s6BhdRkqt3
           &state=af0ifjsldkj
           &nonce=n-0S6_WzA2Mj
           &openid2_realm=https%3A%2F%2Fopenid2.example.com
           &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb HTTP/1.1
  Host: server.example.com

The End-User performs authentication and authorization at 
the Connect OP which then returns the authentication response:

  HTTP /1.1 200 OK
  Location: https://client.example.com/cb#
    id_token=eyJhbGciOiJSUzI1NiIsImtpZCI6IktleTAwMSJ9.ew0KIC
    Jpc3MiOiAiaHR0cDovL3NlcnZlci5leGFtcGxlLmNvbSIsDQogInN1Yi
    I6ICIyNDgyODk3NjEwMDEiLA0KICJhdWQiOiAiczZCaGRSa3F0MyIsDQ
    ogIm5vbmNlIjogIm4tMFM2X1d6QTJNaiIsDQogImV4cCI6IDEzMTEyOD
    E5NzAsDQogImlhdCI6IDEzMTEyODA5NzAsDQogIm9wZW5pZDJfaWQiOi
    AiaHR0cHM6Ly9vcGVuaWQyLmV4YW1wbGUuY29tL3VzZXIzNTkzOTA4Nz
    IxMTIiDQp9.rSo68AZGeJY15WxTtDxHrGlpJu2S7jIHsd_lBrBB20uva
    UbbEvJyMJFuQVUeqH-b8XiyUFtHHynXxYq6P8SpMw7UX2y4BGg0Ky-5z
    KeGJkT8-Cfkx8eLzKMVE-qsB31NhS3bZ4Wp3mHTsUCOUhbHfEeDRJaCJ
    G3NlNEc2QLKBcmfzzdvVw98XuMySFIE0r9ekqx8h0IMvxRQgJENEDQ1q
    70v5oR4YcEO1lcbT3a9wAA-0N27zAP0OUURXSMQaIfpmo8kDIaj7oRd8
    36PowpRodp7VHKO0RoyhOFGFrDDA4z_mCE4Yopx-tWPZFPO8sekrz-H9
    670UAZUOBux2CYGEw&
    state=af0ifjsldkj

The contents of the ID Token after decoding are:

  {
     "iss": "http://server.example.com",
     "sub": "248289761001",
     "aud": "s6BhdRkqt3",
     "nonce": "n-0S6_WzA2Mj",
     "exp": 1311281970,
     "iat": 1311280970,
     "openid2_id": "https://openid2.example.com/user359390872112"
  }

To verify the ID Token signature, get the public JWK from the OpenID 2.0 
Identifier URL.

   GET /user359390872112 HTTP/1.1
   Host: openid2.example.com
   Accept: application/jwk-set+json

 
   HTTP /1.1 200 OK
   Content-Type: application/jwk-set+json
   {"keys":[
     {
       "kty":"RSA",
       "kid":"Key001",
       "n":"w7Zdfmece8iaB0kiTY8pCtiBtzbptJmP28nSWwtdjRu0f2GFpajvWE4VhfJA
            jEsOcwYzay7XGN0b-X84BfC8hmCTOj2b2eHT7NsZegFPKRUQzJ9wW8ipn_aD
            JWMGDuB1XyqT1E7DYqjUCEOD1b4FLpy_xPn6oV_TYOfQ9fZdbE5HGxJUzeku
            GcOKqOQ8M7wfYHhHHLxGpQVgL0apWuP2gDDOdTtpuld4D2LK1MZK99s9gaSj
            RHE8JDb1Z4IGhEcEyzkxswVdPndUWzfvWBBWXWxtSUvQGBRkuy1BHOa4sP6F
            KjWEeeF7gm7UMs2Nm2QUgNZw6xvEDGaLk4KASdIxRQ",
       "e":"AQAB"
     }]
   }


Verify the ID Token signature with the corresponding JWK.]]></artwork>
      </figure>
    </section>

    <section anchor="VerifyRP"
             title="Verification of the Relying Party by the OP">
      <t>There could be an attack by a malicious RP to obtain the user&rsquo;s
      PPID for another RP to perform identity correlation. To mitigate the
      risk, the OP MUST verify that the realm and RP&rsquo;s Redirect URI
      matches as per Section 9.2 of <xref target="OpenID.2.0">OpenID
      2.0</xref>.</t>
    </section>

    <section anchor="ReturnOpenID2ID"
             title="Returning the OpenID 2.0 Identifier">
      <t>If the verification of the Relying Party was successful and an
      associated OpenID 2.0 Identifier for the user is found, then the OP MUST
      include the OpenID 2.0 Identifier in the asymmetrically signed ID Token
      with the following claim name:</t>

      <t><list style="hanging">
          <t hangText="openid2_id "><vspace /> REQUIRED. OpenID 2.0 Identifier.
          It MUST be represented as a JSON string.</t>
        </list>For XRI, OpenID 2.0 Identifier MUST be created as <spanx
      style="verb">https://xri.net/</spanx> + user&rsquo;s verified XRI
      without the <spanx style="verb">xri://</spanx> scheme.</t>

      <figure>
        <preamble>The following is a non-normative example of an ID Token with
        an OpenID 2.0 Identifier claim (with line wraps within values for
        display purposes only)</preamble>

        <artwork><![CDATA[{
 "iss": "http://server.example.com",
 "sub": "248289761001",
 "aud": "s6BhdRkqt3",
 "nonce": "n-0S6_WzA2Mj",
 "exp": 1311281970,
 "iat": 1311280970,
 "openid2_id": "https://openid2.example.com/user359390872112"
}]]></artwork>
      </figure>

      <section anchor="ErrorResponses" title="Error Responses">
        <t>In addition to the error conditions defined in <xref
        target="OpenID.Core">OpenID Connect Core 1.0</xref> , following error
        conditions are defined in this standard:</t>

        <section title="Scope openid2 not supported">
          <t>If the openid2 scope is not supported, the error <spanx
          style="verb">invalid_scope</spanx> as defined in 4.1.2.1 of <xref
          target="RFC6749">OAuth</xref> SHOULD be returned.</t>
        </section>

        <section title="No Associated OpenID 2.0 Identifier found">
          <t>If a corresponding OpenID 2.0 Identifier is not found for the
          authenticated user, the <spanx style="verb">openid2_id</spanx> claim
          in the ID Token MUST have the value <spanx style="verb">NOT FOUND</spanx>.</t>

          <t>NOTE: Even if the <spanx style="verb">openid2_id</spanx> claim
          value is <spanx style="verb">NOT FOUND</spanx>, the overall ID Token
          can still be valid.</t>
        </section>
      </section>
    </section>

    <section anchor="VerifyIDToken" title="Verification of the ID Token">
      <t>The RP MUST verify the ID Token as specified in 3.1.3.7 of <xref
      target="OpenID.Core">OpenID Connect Core 1.0</xref>. If public key
      matching is used to verify the authoritativeness of the Connect OP over
      the OpenID 2.0 Identifier, then the signature verification MUST be
      performed in the step 6 of section 3.1.3.7 of <xref
      target="OpenID.Core">OpenID Connect Core 1.0</xref>.</t>
    </section>

    <section anchor="VerifyOPAuthority"
             title="Verification of the authoritativeness of the Connect OP">
      <t>A malicious OP may try to impersonate the user by returning the
      OpenID 2.0 Identifier that it is not authoritative for. Therefore,
      verifying that the OP is indeed authoritative for the OpenID 2.0
      Identifier is imperative. To establish the authoritativeness for OpenID
      2.0 Identifier, the RP MUST verify that one of the following
      verification rule holds.</t>

      <t><list style="numbers">
          <t>If the RP a priori knows that the authority hosted only one
          OpenID 2.0 OP and OpenID Connect OP each, the authority section of
          Authorization Endpoint URI is the same as the authority section of
          the OpenID 2.0 OP&rsquo;s OP Endpoint URL.</t>

          <t>If they are not (or when a higher confidence is sought), RP MUST
          make a GET call to the obtained verified claimed ID with an Accept
          header set to <spanx style="verb">application/jwk-set+json</spanx>
          and verify that the resulting public key matches the key used to
          sign the ID Token.</t>
        </list>If both fails, it is a failure and the RP MUST NOT accept the
      OpenID 2.0 Identifier.</t>
    </section>

    <section anchor="AssociateIdentifiers"
             title="Associating the existing OpenID 2.0 account with the OpenID Connect identifier">
      <t>As the association between iss/sub and openid.claimed_id has been
      verified, the RP SHOULD associate the existing OpenID 2.0 account with
      the OpenID Connect account.</t>

      <t><spanx style="strong">NOTE</spanx>: At some point in the future, the
      OpenID Connect server may drop the support for <spanx style="verb">openid2</spanx>
      scope. In this case, the OP will return the <spanx style="verb">invalid_scope</spanx>
      in the error as defined in section <xref
      target="ErrorResponses">5.1</xref>.</t>
    </section>

    <section anchor="ImplementationConsiderations"
             title="Implementation Considerations">
      <section title="After EOL of OpenID 2.0 OP">
        <t>This standard allows the RP to verify the authenticity of the
        OpenID 2.0 Identifier through ID Token even after the OpenID 2.0 OP is
        taken down. To enable this, the OP MUST publish the public keys that
        were used to sign the ID Token with <spanx style="verb">openid2_id</spanx>
        claim at the URI that this OpenID 2.0 Identifier points to.</t>

        <t>NOTE: The OpenID 2.0 Identifiers can be mapped to a static file
        containing the keys, so maintaining such can require minimal overhead
        compaired to maintaining the full OpenID 2.0 OP.</t>
      </section>
    </section>

    <section anchor="PrivacyConsiderations" title="Privacy Considerations">
      <t>This section considers the Privacy-Specific threats outlayed in
      section 5.2 of <xref target="RFC6973">RFC6973</xref>.</t>

      <section title="Correlation">
        <t>This standard essentially is a correlation specification. It
        correlates the OpenID Connect identifier with OpenID 2.0 Identifier.
        In the usual case where the user has only one account and the Connect
        and OpenID 2.0 OPs look similar, then the user probably would be
        expecting that those identifiers to be correlated silently. However,
        if the OPs looks very different, then some users may prefer not to be
        correlated. As such, the OP SHOULD make sure that to ask the user if
        the user wants to correlate.</t>

        <t>When multiple accounts are available for the user, then the OP MUST
        make sure that the user picks the intended identity.</t>
      </section>

      <section title=" Identification by other parties">
        <t>Since the channel is encrypted, this risk is low. If the channel
        was vulnerable, then user identifiers and other attributes will be
        exposed and thus allows the attacker to identify the user. To avoid
        it, the parties can employ ID Token encryption as well.</t>
      </section>

      <section title="Secondary Use">
        <t>While there is no technical control in this standard as to the
        secondary use is concerned, RP is strongly advised to announce its
        policy against secondary use in its privacy policy. Secondary use
        usually is associated with privacy impact, so its legitimacy should be
        carefully evaluated.</t>
      </section>

      <section title="Disclosure">
        <t>Since the channel is encrypted, this risk is low. If the channel
        was vulnerable, then user identifiers and other attributes will be
        exposed and thus allows the attacker to identify the user. To avoid
        it, the parties can employ ID Token encryption as well.</t>
      </section>

      <section title="Exclusion">
        <t>To avoid Exclusion in this case, make sure to ask the user if he
        wants the identifiers to be correlated.</t>
      </section>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>In addition to correctly implementing the usual OpenID Connect
      security measures, the RP MUST carefull follow and correctly
      implementing section 7. If in doubt, skipping step 1 and just doing step
      2 is safer.</t>
    </section>

    <section anchor="references" title="References">
      <t></t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119"?>

      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6749"?>

      <?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6973"?>

      <reference anchor="OpenID.Core">
        <front>
          <title>OpenID Connect Core 1.0</title>

          <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
            <organization abbrev="NRI">Nomura Research Institute,
            Ltd.</organization>
          </author>

          <author fullname="John Bradley" initials="J." surname="Bradley">
            <organization abbrev="Ping Identity">Ping Identity</organization>
          </author>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft</organization>
          </author>

          <author fullname="Breno de Medeiros" initials="B."
                  surname="de Medeiros">
            <organization abbrev="Google">Google</organization>
          </author>

          <author fullname="Chuck Mortimore" initials="C." surname="Mortimore">
            <organization abbrev="Salesforce">Salesforce</organization>
          </author>

          <date day="25" month="February" year="2014" />
        </front>

        <format target="http://openid.net/specs/openid-connect-core-1_0.html"
                type="HTML" />
      </reference>

      <reference anchor="OpenID.2.0">
        <front>
          <title>OpenID Authentication 2.0</title>

          <author fullname="OpenID Foundation">
            <organization abbrev="OIDF">OpenID Foundation</organization>
          </author>

          <date day="5" month="December" year="2007" />
        </front>

        <format target="http://openid.net/specs/openid-authentication-2_0.txt"
                type="TXT" />

        <format target="http://openid.net/specs/openid-authentication-2_0.html"
                type="HTML" />
      </reference>
    </references>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>In addition to the authors, the OpenID Community would like to thank
      the following people for their contributions to this specification:</t>

      <t><list style="empty">
          <t>Breno de Medeiros (breno@google.com), Google</t>

          <t>Ryo Ito (ryo.ito@mixi.co.jp), mixi, Inc.</t>

          <t>Michael B. Jones (mbj@microsoft.com), Microsoft</t>

          <t>Nov Matake (nov@matake.jp), Independent</t>

          <t>Naveen Agarwal (naa@google.com), Google</t>

          <t>Allan Foster(allan.foster@forgerock.com), ForgeRock</t>

          <t>Chuck Mortimore (cmortimore@salesforce.com), Salesforce</t>
        </list></t>
    </section>

    <section title="Sequence Diagrams">
      <figure>
        <preamble>Migration Sequece Diagram for Implici Flow</preamble>

        <artwork><![CDATA[      +----+  +----------+   +--------------+ +---------+  +----------+
      | UA |  | Resource |   | Redirect URI | | AuthzEP |  |OpenID2URI|
      +-+--+  +----+-----+   +-----+--------+ +---+-----+  +-----+----+
   Click|Authn Link|               |              |              |     
        +--------> |               |              |              |     
        |Authn Req |               |              |              |     
        | <--------+               |              |              |     
        |          | Authn Req     |              |              |     
        +---------------------------------------> |              |     
+----+----------------------------------------------------------------+
|OPT |  |          | Authn Page    |              |              |    |
+----+  | <---------------------------------------+              |    |
|       |          | Credential    |              |              |    |
|       +---------------------------------------> |              |    |
+---------------------------------------------------------------------+
        |          |302 to RedirectURI            |              |     
        | <------------------------+--------------+              |     
        |          |ID Token       |              |              |     
        +------------------------> |              |              |     
        |          |               |------+       |              |     
        |          |Get OpenID2URI |      |       |              |     
        |          |from ID Token  | <----+       |              |     
        |          |               | GET w/Accept: application/jwk+json
        |          |               +---------------------------> +     
        |          |               | Pub key in JWKS format      |     
        |          |               | <------------+--------------+     
        |          |               |              |              |     
      +-+--+  +----+-----+  +------+-------+ +----+----+  +------+---+ 
      | UA |  | Resource |  | Redirect URI | | AuthzEP |  |OpenID2URI| 
      +----+  +----------+  +--------------+ +---------+  +----------+]]></artwork>
      </figure>
    </section>

    <section title="Difference to Google&rsquo;s migration guide as of June 3, 2014 ">
      <t>In this appendix, the differences between this spec and the
      Google&rsquo;s migration guide as of June 3, 2014 is expalined. The
      differences are categorized in accordance with the section number of
      this specification. Google's migration guide is available at <spanx
      style="verb">https://developers.google.com/accounts/docs/OpenID#openid-connect</spanx>
      . These differences should be discussed and determined whether it should
      be aligned with the Google's guide before finalizing this specification.
      </t>

      <t><spanx>3. Requesting the OpenID 2.0 Identifier and Connect iss/sub pair together</spanx></t>

      <t>Google uses <spanx style="verb">openid.realm</spanx> instead. Since
      OpenID Connect uses param_name style instead of <spanx style="verb">param.name</spanx>,
      as well as the name <spanx style="verb">openid.realm</spanx> may mislead
      the user that it is a Connect parameter proper, it has been changed to
      <spanx style="verb">openid2_realm</spanx>.</t>

      <t>Google uses the existence of openid.realm parameter to switch the
      behavior at the Connect OP. New scope value <spanx style="verb">openid2</spanx>
      has been introduced in this spec to make it more explicit and
      semantically in-line that it is asking for a resource.</t>

      <t><spanx>4. Verification of the Relying Party by the OP </spanx></t>

      <t>Google does not perform RP verification.</t>

      <t><spanx>5. Returning OpenID 2.0 Identifier </spanx></t>

      <t>Google uses <spanx style="verb">openid_id</spanx> instead of <spanx
      style="verb">openid2_id</spanx> . It was changed to <spanx style="verb">openid2_id</spanx>
      because <spanx style="verb">openid_id</spanx> may cause confusion among
      people that it is the Connect identifier. Since this spec allows
      providing <spanx style="verb">openid2_id</spanx> even after the OpenID
      2.0 OP has been taken down, this claim may persists much longer than the
      OpenID 2.0 OP. Thus, the chance of confusion should be minimized. </t>

      <t>Google does not take care of XRI while this standard does.</t>

      <t><spanx>6. Verification of the authority </spanx></t>

      <t>Google does not perform authority verification.</t>
    </section>

    <section anchor="Notices" title="Notices">
      <t>Copyright (c) 2014 The OpenID Foundation.</t>

      <t>The OpenID Foundation (OIDF) grants to any Contributor, developer,
      implementer, or other interested party a non-exclusive, royalty free,
      worldwide copyright license to reproduce, prepare derivative works from,
      distribute, perform and display, this Implementers Draft or Final
      Specification solely for the purposes of (i) developing specifications,
      and (ii) implementing Implementers Drafts and Final Specifications based
      on such documents, provided that attribution be made to the OIDF as the
      source of the material, but that such attribution does not indicate an
      endorsement by the OIDF.</t>

      <t>The technology described in this specification was made available
      from contributions from various sources, including members of the OpenID
      Foundation and others. Although the OpenID Foundation has taken steps to
      help ensure that the technology is available for distribution, it takes
      no position regarding the validity or scope of any intellectual property
      or other rights that might be claimed to pertain to the implementation
      or use of the technology described in this specification or the extent
      to which any license under such rights might or might not be available;
      neither does it represent that it has made any independent effort to
      identify any such rights. The OpenID Foundation and the contributors to
      this specification make no (and hereby expressly disclaim any)
      warranties (express, implied, or otherwise), including implied
      warranties of merchantability, non-infringement, fitness for a
      particular purpose, or title, related to this specification, and the
      entire risk as to implementing this specification is assumed by the
      implementer. The OpenID Intellectual Property Rights policy requires
      contributors to offer a patent promise not to assert certain patent
      claims against other contributors and against implementers. The OpenID
      Foundation invites any interested party to bring to its attention any
      copyrights, patents, patent applications, or other proprietary rights
      that may cover technology that may be required to practice this
      specification.</t>
    </section>
  </back>
</rfc>
