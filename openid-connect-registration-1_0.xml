<?xml version="1.0" encoding="US-ASCII"?>
<?xml-stylesheet type='text/xsl' href='http://xml.resource.org/authoring/rfc2629.xslt' ?>
<!DOCTYPE rfc PUBLIC "-//IETF//DTD RFC 2629//EN"
"http://xml.resource.org/authoring/rfc2629.dtd">
<rfc category="exp" docName="draft-openid-connect-registration-1_0"
     ipr="trust200902">
  <?rfc toc="yes" ?>

  <?rfc tocdepth="3" ?>

  <?rfc symrefs="yes" ?>

  <?rfc sortrefs="yes"?>

  <?rfc strict="no" ?>

  <?rfc iprnotified="no" ?>

  <?rfc private="Draft" ?>

  <front>
    <title abbrev="OpenID Connect Registration 1.0 draft 08">OpenID Connect
    Dynamic Client Registration 1.0 - draft 08</title>

    <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
      <organization abbrev="NRI">Nomura Research Institute,
      Ltd.</organization>

      <address>
        <email>n-sakimura@nri.co.jp</email>
      </address>
    </author>

    <author fullname="John Bradley" initials="J." role="editor"
            surname="Bradley">
      <organization abbrev="Protiviti">Protiviti Government
      Services</organization>

      <address>
        <email>jbradley@mac.com</email>
      </address>
    </author>

    <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
      <organization abbrev="Microsoft">Microsoft Corporation</organization>

      <address>
        <email>mbj@microsoft.com</email>
      </address>
    </author>

    <date day="1" month="November" year="2011" />

    <abstract>
      <t>OpenID Connect is an identity protocol that provides authentication,
      authorization, and attribute transmission capability. It allows third
      party attested claims from distributed sources. The specification suite
      builds on OAuth 2.0 and consists of Building Blocks (Messages,
      Discovery, Dynamic Client Registration, Session Management, JSON Web
      Token, JSON Web Signature, JSON WEB Encryption, JSON Web Keys, Simple
      Web Discovery), Protocol Bindings (e.g., Standard and Basic Client) and
      Extensions. This specification is the "Dynamic Client Registration" part
      of the suite that defines how clients register with OpenID
      Providers.</t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119">RFC 2119</xref>.</t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t>In order for an OpenID Connect client to utilize OpenID services for
      a user, the client needs to register with the OpenID Provider to acquire
      a client ID and shared secret. This document describes how a new client
      can register with the provider, and how a client already in possession
      of a client_id can retrieve updated registration information.</t>

      <t>The Client Registration endpoint may be co-resident with the token
      endpoint as an optimization in some deployments.</t>
    </section>

    <section anchor="terminology" title="Terminology">
      <t>This specification uses the terms "Access Token", "Refresh Token",
      "Authorization Code", "Authorization Grant", "Authorization Server",
      "Authorization Endpoint", "Client", "Client Identifier", "Client
      Secret", "Protected Resource", "Resource Owner", "Resource Server", and
      "Token Endpoint" that are defined by <xref target="OAuth.2.0">OAuth
      2.0</xref>, and the terminology defined in the <xref
      target="OpenID.Messages">OpenID Connect Messages 1.0</xref>
      specification.</t>
    </section>

    <section title="Discovery">
      <t>OpenID Connect uses the registration_endpoint from the Provider
      Configuration Response <xref target="OpenID.Discovery">Sec
      4.2</xref>.</t>
    </section>

    <section title="Client Registration Endpoint">
      <t>The Client Registration Endpoint is an OAuth 2.0 protected resource that returns registration information for
      the client to configure itself for the OpenID Provider.</t>
      
      <t>The Client Registration Endpoint may accept requests that are not OAuth 2.0 authenticated.</t>
      
      <t>How a developer gets a Access Token to use at this endpoint is out of scope for this specification.</t>
      
      <t>If a Access Token is required for client registration the Client Registration Endpoint
      MUST be able to accept Access Tokens via
      <xref target="OAuth.2.0.Bearer">Bearer Tokens</xref>
      specification.</t>

      <section title="Request">
        <t>Clients MUST send requests encoded as a POST with the following
        parameters added to the HTTP request entity-body using
        "application/x-www-form-urlencoded" format:</t>

        <t><list style="hanging">
            
            <t hangText="type">REQUIRED. Values <spanx style="verb">client_associate</spanx>,
            <spanx style="verb">client_update</spanx></t>

            <t hangText="client_id">OPTIONAL. Used with <spanx style="verb">client_update</spanx></t>

            <t hangText="client_secret">OPTIONAL. Used with <spanx
            style="verb">client_update</spanx></t>
            
            <t hangText="access_token">OPTIONAL. An access_token obtained
            out of band to identify the registrent. This parameter
            MUST NOT be sent if the Access Token is sent in the HTTP
            Authorization header as described in Section 7.1 of <xref
            target="OAuth.2.0">OAuth 2.0</xref>. Access Tokens sent in the
            authorization header must be <xref
            target="OAuth.2.0.Bearer">Bearer tokens</xref>.</t>

            <t hangText="contact">OPTIONAL. Space-separated list of email
            addresses for people allowed to administer the application.</t>

            <t hangText="application_type">OPTIONAL. <spanx style="verb">native</spanx>
            or <spanx style="verb">web</spanx>.</t>

            <t hangText="application_name">OPTIONAL. Name of the application
            to be presented to the user.</t>

            <t hangText="logo_url">OPTIONAL. URL that a logo for the
            application can be retrieved from.</t>

            <t hangText="redirect_uri">OPTIONAL. Space-separated list of
            redirect URIs</t>

            <t hangText="js_origin_uri">OPTIONAL. Space-separated list of
            JavaScript Origin URIs (used for Post Message flow)</t>
            
            <t hangText="token_endpoint_auth_type">OPTIONAL. The requested authentication
            type for the token_endpoint.  If unspecified or omitted the default is the HTTP Basic Authentication Scheme as specified in
            section 3.2.1 of <xref target="OAuth.2.0">OAuth 2.0</xref>.</t>
            
            <t hangText="jwk_signing_url">OPTIONAL. URL for the RP's <xref
            target="JWK">JSON Web Key</xref> used for <xref target="JWS">JWS</xref> signing of 
            token_endpoint and request objects.</t>

            <t hangText="jwk_url">OPTIONAL. URL for the RP's <xref
            target="JWK">JSON Web Key</xref> used for <xref target="JWE">JWE</xref> encryption.</t>

            <t hangText="policy_url">OPTIONAL. A URL location which the Relying 
            Party client provides to the End User to read about the how the
            profile data will be used. The OpenID Provider SHOULD display this
            URL to the End User if it is given.</t>

            <t hangText="x509_url">OPTIONAL URL for the RP's PEM encoded X.509
            Certificate or Certificate chain, used for <xref target="JWE">JWE</xref> encryption. If both x509_url and jwk_url are specified 
            x509_url MUST be used.</t>
            
			<t hangText="x509_signing_url">OPTIONAL URL for the RP's PEM encoded X.509
            Certificate or Certificate chain, used for <xref target="JWS">JWS</xref> encryption.signing of 
            token_endpoint and request objects. If both x509_signing_url and jwk_signing_url are specified 
            x509_signing_url MUST be used.</t>
            
            <t hangText="sector_identifier">OPTIONAL URL to be used in
            calculating Pseudonymous Identifiers by the OP. The URL contains a
            file with an array of redirect_uri values.</t>
            
            <t hangText="require_signed_request">OPTIONAL if the value of the string
             is set to true, the Authorization Server MUST reject all requests from this client_id not
             containing a signed request object.</t>
             
             <t hangText="user_info_require_signed_response">OPTIONAL the <xref target="JWS">JWS</xref> signing 
             algorithm required for user_info responses. If this is specified the response will be 
             <xref target="JWT">JWT</xref> serialized</t>
             
             <t hangText="user_info_require_encrypted_response">OPTIONAL the <xref target="JWE">JWE</xref> encryption 
             algorithm required for user_info responses. If this is requested in combination with signing the response will be signed then encrypted. 
             If this is specified the response will be 
             <xref target="JWT">JWT</xref> serialized</t>
             
             <t hangText="id_token_require_signed_response">OPTIONAL the <xref target="JWS">JWS</xref> signing 
             algorithm required for id_token issued to this client_id. The default if not specified is HMAC-SHA256 using the provided client_secret.</t>
             
             <t hangText="id_token_require_encrypted_response">OPTIONAL the <xref target="JWE">JWE</xref> encryption 
             algorithm required for id_token issued to this client_id.. If this is requested the response will be signed then encrypted. 
             The default if not specified is no encryption</t>
          </list></t>
          
          <t>Following is a non-normative example request:</t>
          
          <t><figure>
            <artwork><![CDATA[POST /connect/register HTTP/1.1
Accept: application/x-www-form-urlencoded
Host: server.example.com

type=client_associate
&redirect_uri=https://client.example.com/callback https://client.example.com/callback2
&logo_url=https://client.example.com/logo.png
]]></artwork>
          </figure></t>
      </section>

      <section title="Response">
        <t>The response is returned as a JSON object with all the parameters
        as top level elements.</t>

        <t><list style="hanging">
            <t hangText="client_id">REQUIRED. The unique client
            identifier.</t>

            <t hangText="client_secret">REQUIRED. The client secret. This
            should change with each response.</t>

            <t hangText="expires_at">REQUIRED. The number of
            seconds from 1970-01-01T0:0:0Z as measured in UTC that the client_id
            and client_secret will expire or <spanx style="verb">0</spanx> if
            they do not expire. See <xref target="RFC3339">RFC 3339</xref>
            for details regarding date/times in general and UTC in particular.</t>
          </list></t>

        <t>Following is a non-normative example response:</t>

        <t><figure>
            <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/json
Cache-Control: no-store

{
 "client_id":"SlAV32hkKG",
 "client_secret":"cf136dc3c1fd9153029bb9c6cc9ecead918bad9887fce6c93f31185e5885805d",
 "expires_in":3600
}]]></artwork>
          </figure></t>

              <section title="Client Registration Error Response">
          <t>When some error condition arises, the Client Registration Endpoint returns
          the JSON serialized Error Response defined in section 3.3.3 of <xref
          target="OpenID.Messages">OpenID Connect Messages 1.0</xref> in the
          entity body of the HTTP response using the <spanx style="verb">application/json</spanx>
          media type with HTTP response code 400.</t>

          <t><figure>
              <preamble>Following is a non-normative example of an error
              response:</preamble>

              <artwork><![CDATA[HTTP/1.1 400 Bad Request
Content-Type: application/json

{
  "error": "invalid_request"
}
]]></artwork>
            </figure></t>
        </section>
      </section>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This document makes no request of IANA.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>Since requests to the client registration endpoint result in the
      transmission of clear-text credentials (in the HTTP request and
      response), the server MUST require the use of a transport-layer security
      mechanism when sending requests to the token endpoint. The server MUST
      support TLS 1.2 as defined in <xref target="RFC5246">RFC 5246</xref>, 
      and MAY support additional transport-layer mechanisms meeting its security
      requirements.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.3339.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml"?>

      <reference anchor="OpenID.Messages">
        <front>
          <title>OpenID Connect Messages 1.0</title>

          <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
            <organization abbrev="NRI">Nomura Research Institute,
            Ltd.</organization>
          </author>

          <author fullname="David Recordon" initials="D." surname="Recordon">
            <organization abbrev="Facebook">Facebook</organization>
          </author>

          <author fullname="John Bradley" initials="J." surname="Bradley">
            <organization abbrev="Protiviti">Protiviti Government
            Services</organization>
          </author>

          <author fullname="Breno de Medeiros" initials="B."
                  surname="de Medeiros">
            <organization abbrev="Google">Google</organization>
          </author>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft
            Corporation</organization>
          </author>

          <author fullname="Edmund Jay" initials="E." surname="Jay">
            <organization abbrev="MGI1">MGI1</organization>
          </author>

          <date day="30" month="September" year="2011" />
        </front>

        <format target="http://openid.net/specs/openid-connect-messages-1_0.html"
                type="HTML" />
      </reference>

      <reference anchor="OpenID.Discovery">
        <front>
          <title>OpenID Connect Discovery 1.0</title>

          <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
            <organization abbrev="NRI">Nomura Research Institute,
            Ltd.</organization>
          </author>

          <author fullname="John Bradley" initials="J." surname="Bradley">
            <organization abbrev="Protiviti">Protiviti Government
            Services</organization>
          </author>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft</organization>
          </author>

          <author fullname="Edmund Jay" initials="E." surname="Jay">
            <organization abbrev="MGI1">MGI1</organization>
          </author>

          <date day="30" month="September" year="2011" />
        </front>

        <format target="http://openid.net/specs/openid-connect-discovery-1_0.html"
                type="HTML" />
      </reference>
      
      <reference anchor="JWT">
        <front>
          <title>JSON Web Token</title>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft
            Corporation</organization>
          </author>

          <author fullname="Dirk Balfanz" initials="D." surname="Balfanz">
            <organization abbrev="goog">Google</organization>
          </author>

          <author fullname="John Bradley" initials="J." surname="Bradley">
            <organization abbrev="pgs">rotivity Government
            Service</organization>
          </author>

          <author fullname="Yaron Goland" initials="Y." surname="Goland">
            <organization abbrev="msft">Microsoft</organization>
          </author>

          <author fullname="John Panzer" initials="J." surname="Panzer">
            <organization abbrev="goog">Google</organization>
          </author>

          <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
            <organization abbrev="nri">Nomura Research Institute,
            Ltd.</organization>
          </author>

          <author fullname="Paul Tarjan" initials="P." surname="Tarjan">
            <organization abbrev="fb">Facebook</organization>
          </author>

          <date day="11" month="July" year="2011" />
        </front>

        <format target="http://tools.ietf.org/html/draft-jones-json-web-token"
                type="HTML" />
      </reference>

      <reference anchor="JWS">
        <front>
          <title>JSON Web Signatures</title>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft
            Corporation</organization>
          </author>

          <author fullname="Dirk Balfanz" initials="D." surname="Balfanz">
            <organization abbrev="goog">Google</organization>
          </author>

          <author fullname="John Bradley" initials="J." surname="Bradley">
            <organization abbrev="pgs">rotivity Government
            Service</organization>
          </author>

          <author fullname="Yaron Goland" initials="Y." surname="Goland">
            <organization abbrev="msft">Microsoft</organization>
          </author>

          <author fullname="John Panzer" initials="J." surname="Panzer">
            <organization abbrev="goog">Google</organization>
          </author>

          <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
            <organization abbrev="nri">Nomura Research Institute,
            Ltd.</organization>
          </author>

          <author fullname="Paul Tarjan" initials="P." surname="Tarjan">
            <organization abbrev="fb">Facebook</organization>
          </author>

          <date day="29" month="April" year="2011" />
        </front>

        <format target="http://tools.ietf.org/html/draft-jones-json-web-signature"
                type="HTML" />
      </reference>

      <reference anchor="JWE">
        <front>
          <title>JSON Web Encryption</title>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft
            Corporation</organization>
          </author>

          <author fullname="John Bradley" initials="J." surname="Bradley">
            <organization abbrev="pgs">rotivity Government
            Service</organization>
          </author>

          <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
            <organization abbrev="nri">Nomura Research Institute,
            Ltd.</organization>
          </author>

          <date day="23" month="July" year="2011" />
        </front>

        <format target="http://tools.ietf.org/html/draft-jones-json-web-encryption"
                type="HTML" />
      </reference>

      <reference anchor="JWK">
        <front>
          <title>JSON Web Key (JWK)</title>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft</organization>
          </author>

          <date day="25" month="July" year="2011" />
        </front>

        <format target="http://self-issued.info/docs/draft-jones-json-web-key.html"
                type="HTML" />
      </reference>

      <reference anchor="OAuth.2.0">
        <front>
          <title>OAuth 2.0 Authorization Protocol</title>

          <author fullname="Eran Hammer-Lahav" initials="E." role="editor"
                  surname="Hammer-Lahav">
            <organization abbrev="Yahoo">Yahoo</organization>
          </author>

          <author fullname="David Recordon" initials="D." surname="Recordon">
            <organization abbrev="Facebook">Facebook</organization>
          </author>

          <author fullname="Dick Hardt" initials="D." surname="Hardt">
            <organization abbrev="Microsoft">Microsoft</organization>
          </author>

          <date day="22" month="September" year="2011" />
        </front>

        <format target="http://tools.ietf.org/html/draft-ietf-oauth-v2"
                type="HTML" />
      </reference>
      
      <reference anchor="OAuth.2.0.Bearer">
        <front>
          <title>OAuth 2.0 Protocol: Bearer Tokens</title>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft
            Corporation</organization>
          </author>

          <author fullname="Dick Hardt" initials="D." surname="Hardt">
            <organization>Independent</organization>
          </author>

          <author fullname="David Recordon" initials="D." surname="Recordon">
            <organization abbrev="Facebook">Facebook</organization>
          </author>

          <date day="22" month="September" year="2011" />
        </front>

        <format target="http://tools.ietf.org/html/draft-ietf-oauth-v2-bearer"
                type="HTML" />
      </reference>
    </references>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t></t>
    </section>

    <section title="Document History">
      <t>[[ To be removed from the final specification ]]</t>
      <t>-08</t>

      <t><list style="symbols">
          <t>Made the Client Registration endpoint OAuth 2.0 protected.</t>
          <t>Added paramaters for requiring encryption and asymmetric signature</t>
          <t>Added JWT, JWE and JWS refrence </t>
          <t>Added token_endpoint_auth_type</t>
          <t>Added JWK and x5u signing links</t>
          
        </list></t>

      <t>-07</t>

      <t><list style="symbols">
          <t>Changed request from posting a JSON object to being HTTP
          Form encoded.</t>

          <t>Added x509_url to support optional encryption.</t>
        </list></t>

      <t>-06 <list style="symbols">
          <t>Changes associated with renaming "Lite" to "Basic Client" and
          replacing "Core" and "Framework" with "Messages" and "Standard".</t>

          <t>Numerous cleanups, including updating references.</t>
        </list></t>

      <t>-05 <list style="symbols">
          <t>Changed <spanx style="verb">redirect_url</spanx> to <spanx
          style="verb">redirect_uri</spanx> and <spanx style="verb">js_origin_url</spanx>
          to <spanx style="verb">js_origin_uri</spanx>.</t>
        </list></t>

      <t>-04 <list style="symbols">
          <t>Correct issues raised by Johnny Bufu and discussed on the
          7-Jul-11 working group call.</t>
        </list></t>

      <t>-03 <list style="symbols">
          <t>Incorporate working group decisions from 5-Jul-11 spec call.</t>

          <t>Consistency and cleanup pass, including removing unused
          references.</t>
        </list></t>

      <t>-02 <list style="symbols">
          <t>Incorporate working group decisions from 23-Jun-11 spec call.</t>
        </list></t>

      <t>-01 <list style="symbols">
          <t>Initial version.</t>
        </list></t>
    </section>
  </back>
</rfc>
